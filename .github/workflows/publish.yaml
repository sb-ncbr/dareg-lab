name: 'publish'

on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm-based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel-based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-2019' # Use an older Windows runner for Windows 7 compatibility.
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust 1.63 (for Windows 7 compatibility)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63.0

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install Windows 7 compatible build tools
        if: matrix.platform == 'windows-2019'
        run: |
          choco install -y visualstudio2019buildtools
          choco install -y visualstudio2019-workload-vctools
          choco install -y windows-sdk-7.1
          rustup target add x86_64-pc-windows-msvc

      - name: install WebView2 Runtime for Windows 7
        if: matrix.platform == 'windows-2019'
        run: |
          Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/p/?LinkId=2124703" -OutFile WebView2.exe
          Start-Process WebView2.exe -ArgumentList "/silent /install" -NoNewWindow -Wait

      - name: install frontend dependencies
        run: yarn install # change this to npm, pnpm or bun depending on what you use.

      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          includeUpdaterJson: false
          args: ${{ matrix.args }}

      - name: Verify Windows 7 Compatibility
        if: matrix.platform == 'windows-2019'
        run: |
          echo "Checking for missing DLLs..."
          dumpbin /dependents target/release/bundle/msi/*.exe || echo "Dependency check failed"
